{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","thead","tbody","rows","querySelectorAll","rowsWithData","forEach","i","contains","push","addEventListener","e","target","element","index","cellIndex","className","sortAscOrder","sort","row1","row2","cell1","children","textContent","replace","cell2","isNaN","localeCompare","append","sortDescOrder","currentRow","closest","activeRow","classList","remove","toggle","form","createElement","createNotification","type","result","message","notification","dataset","qa","insertAdjacentHTML","style","position","display","flexDirection","justifyContent","alignItems","top","background","borderRadius","color","body","setTimeout","innerHTML","preventDefault","data","FormData","dataObject","Object","fromEntries","entries","salary","Number","newEmployee","name","length","age","office","toLocaleString","label","firstElementChild","tagName","value","cell","cellWidth","offsetWidth","cellText","add","newInput","width","focus","nextEvent","key","optionsFromSelect","map","option","includes"],"mappings":"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","file":"main.7967abaf.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = document.querySelectorAll('tr');\nconst rowsWithData = [];\n\n[...rows].forEach(i => {\n  if (tbody.contains(i)) {\n    rowsWithData.push(i);\n  }\n});\n\ntable.addEventListener('click', (e) => {\n  if (!thead.contains(e.target)) {\n    return;\n  };\n\n  const element = e.target;\n  const index = element.cellIndex;\n\n  if (element.className === '') {\n    element.className = 'ASC';\n  }\n\n  if (element.className === 'ASC') {\n    element.className = 'DESC';\n\n    const sortAscOrder = rowsWithData.sort((row1, row2) => {\n      const cell1 = row1.children[index].textContent.replace(/[$,]/g, '');\n      const cell2 = row2.children[index].textContent.replace(/[$,]/g, '');\n\n      if (isNaN(cell1)) {\n        return cell1.localeCompare(cell2);\n      } else {\n        return (cell1 - cell2);\n      };\n    });\n\n    tbody.append(...sortAscOrder);\n  } else {\n    element.className = 'ASC';\n\n    const sortDescOrder = rowsWithData.sort((row1, row2) => {\n      const cell1 = row1.children[index].textContent.replace(/[$,]/g, '');\n      const cell2 = row2.children[index].textContent.replace(/[$,]/g, '');\n\n      if (isNaN(cell1)) {\n        return cell2.localeCompare(cell1);\n      } else {\n        return (cell2 - cell1);\n      };\n    });\n\n    tbody.append(...sortDescOrder);\n  }\n});\n\ntbody.addEventListener('click', (e) => {\n  const currentRow = e.target.closest('tr');\n  const activeRow = document.querySelector('.active');\n\n  if (activeRow && activeRow !== currentRow) {\n    activeRow.classList.remove('active');\n  };\n\n  currentRow.classList.toggle('active');\n});\n\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nform.innerHTML = `\n  <label>\n    Name:\n    <input\n      name=\"name\"\n      type=\"text\"\n      data-qa=\"name\"\n    >\n  </label>\n\n  <label>\n    Position:\n    <input\n      name=\"position\"\n      type=\"text\"\n      data-qa=\"position\"\n    >\n  </label>\n\n  <label>\n    Office:\n    <select name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label>\n    Age:\n    <input\n      name=\"age\"\n      type=\"number\"\n      data-qa=\"age\"\n    >\n  </label>\n\n  <label>\n    Salary:\n    <input\n      name=\"salary\"\n      type=\"number\"\n      data-qa=\"salary\"\n    >\n  </label>\n\n  <button type=\"submit\">Save to table</button>\n`;\n\ndocument.body.append(form);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const dataObject = Object.fromEntries(data.entries());\n  const salary = Number(dataObject.salary);\n  const newEmployee = document.createElement('tr');\n\n  if (dataObject.name.length < 4 || !isNaN(Number(dataObject.name))) {\n    createNotification(\n      'error',\n      '&#9997; Please, write your name',\n      'Name must be more than 4 letters'\n    );\n\n    return;\n  }\n\n  if (!isNaN(Number(dataObject.position)) || dataObject.position === '') {\n    createNotification(\n      'error',\n      '&#10060; Position haven`t digit',\n      'Position must contains only letters'\n    );\n\n    return;\n  }\n\n  if (dataObject.age < 18 || dataObject.age > 90) {\n    createNotification(\n      'error',\n      '&#10084; Save your life!',\n      'Age must be from 18 to 90'\n    );\n\n    return;\n  }\n\n  if (isNaN(Number(dataObject.salary)) || dataObject.salary <= 0) {\n    createNotification(\n      'error',\n      '&#128184; Salary it isn`t number',\n      'Salary must be counting'\n    );\n\n    return;\n  }\n\n  newEmployee.insertAdjacentHTML('afterbegin', `\n    <td>${dataObject.name}</td>\n    <td>${dataObject.position}</td>\n    <td>${dataObject.office}</td>\n    <td>${dataObject.age}</td>\n    <td>$${salary.toLocaleString('en-US')}</td>\n  `);\n\n  tbody.append(newEmployee);\n\n  createNotification(\n    'success',\n    '&#127881; Congratulation!',\n    'New employee added'\n  );\n\n  [...form.children].forEach(label => {\n    if (label.children.length && label.firstElementChild.tagName === 'INPUT') {\n      label.firstElementChild.value = '';\n    }\n  });\n});\n\nfunction createNotification(type, result, message) {\n  const notification = document.createElement('div');\n\n  notification.className = type;\n  notification.dataset.qa = 'notification';\n\n  notification.insertAdjacentHTML('afterbegin', `\n    <h3 style=\"margin: 10px\">${result}</h3>\n    <p style=\"margin: 4px\">${message}</p>\n  `);\n\n  notification.style.position = 'fixed';\n  notification.style.display = 'flex';\n  notification.style.flexDirection = 'column';\n  notification.style.justifyContent = 'center';\n  notification.style.alignItems = 'center';\n  notification.style.top = 10 + 'px';\n  notification.style.background = '#FBEFF5';\n  notification.style.borderRadius = '10px';\n  notification.style.color = '#FF8000';\n\n  document.body.append(notification);\n  setTimeout(() => notification.remove(), 2000);\n}\n\ntbody.addEventListener('dblclick', (e) => {\n  const cell = e.target;\n  const cellWidth = cell.offsetWidth;\n  const cellText = cell.textContent;\n  const index = e.target.cellIndex;\n  const currentRow = e.target.closest('tr');\n\n  currentRow.classList.add('active');\n\n  const newInput = document.createElement('input');\n\n  newInput.className = 'cell-input';\n  newInput.name = 'cel-info';\n  newInput.type = 'text';\n  newInput.style.width = cellWidth + 'px';\n\n  cell.textContent = '';\n  cell.append(newInput);\n\n  newInput.focus();\n\n  newInput.addEventListener('keydown', (nextEvent) => {\n    if (nextEvent.key === 'Enter' && index === 0\n      && (newInput.value.length < 4 || !isNaN(Number(newInput.value)))) {\n      createNotification(\n        'error',\n        '&#9997; Please, write your name',\n        'Name must be more than 4 letters'\n      );\n\n      return;\n    }\n\n    if (nextEvent.key === 'Enter' && index === 1\n    && (!isNaN(Number(newInput.value)))) {\n      createNotification(\n        'error',\n        '&#10060; Position haven`t digit',\n        'Position must contains only letters'\n      );\n\n      return;\n    }\n\n    const optionsFromSelect = [...document.querySelectorAll('option')]\n      .map(option => option.value);\n\n    if (nextEvent.key === 'Enter' && index === 2\n    && !(optionsFromSelect.includes(newInput.value))) {\n      createNotification(\n        'error',\n        '&#127970; Choose other city',\n        'We don`t have office in this city'\n      );\n\n      return;\n    }\n\n    if (nextEvent.key === 'Enter' && index === 3 && isNaN(newInput.value)) {\n      createNotification(\n        'error',\n        '&#9312; &#9313; &#9314; ...',\n        'Age must be digit!');\n\n      return;\n    }\n\n    if (nextEvent.key === 'Enter' && index === 3\n    && (newInput.value < 18 || newInput.value > 90)) {\n      createNotification(\n        'error',\n        '&#10084; Save your life!',\n        'Age must be from 18 to 90'\n      );\n\n      return;\n    }\n\n    if (nextEvent.key === 'Enter' && index === 4\n    && (isNaN(newInput.value) || newInput.value <= 0)) {\n      createNotification('error', '&#128184;', 'Salary must be counting');\n\n      return;\n    }\n\n    if (nextEvent.key === 'Enter') {\n      if (newInput.value !== '') {\n        if (index === 4) {\n          cell.textContent = '$' + (+newInput.value).toLocaleString('en-US');\n        } else {\n          cell.textContent = newInput.value;\n        }\n      } else {\n        cell.textContent = cellText;\n      };\n    }\n  });\n\n  newInput.addEventListener('blur', () => {\n    currentRow.classList.remove('active');\n\n    if (index === 0\n      && (newInput.value.length < 4 || !isNaN(Number(newInput.value)))) {\n      createNotification(\n        'error',\n        '&#9997; Please, write your name',\n        'Name must be more than 4 letters'\n      );\n\n      cell.textContent = cellText;\n\n      return;\n    };\n\n    if (index === 1 && (!isNaN(Number(newInput.value)))) {\n      createNotification(\n        'error',\n        '&#10060; Position haven`t digit',\n        'Position must contains only letters'\n      );\n\n      cell.textContent = cellText;\n\n      return;\n    }\n\n    const optionsFromSelect = [...document.querySelectorAll('option')]\n      .map(option => option.value);\n\n    if (index === 2 && !(optionsFromSelect.includes(newInput.value))) {\n      createNotification(\n        'error',\n        '&#127970; Choose other city',\n        'We don`t have office in this city'\n      );\n\n      cell.textContent = cellText;\n\n      return;\n    }\n\n    if (index === 3 && isNaN(newInput.value)) {\n      createNotification(\n        'error',\n        '&#9312; &#9313; &#9314; ...',\n        'Age must be digit!'\n      );\n\n      cell.textContent = cellText;\n\n      return;\n    }\n\n    if (index === 3 && (newInput.value < 18 || newInput.value > 90)) {\n      createNotification(\n        'error',\n        '&#10084; Save your life!',\n        'Age must be from 18 to 90'\n      );\n\n      cell.textContent = cellText;\n\n      return;\n    }\n\n    if (index === 4 && (isNaN(newInput.value) || newInput.value <= 0)) {\n      createNotification('error', '&#128184;', 'Salary must be counting');\n\n      cell.textContent = cellText;\n\n      return;\n    };\n\n    if (index === 4 && newInput.value !== '') {\n      cell.textContent = '$' + Number(newInput.value).toLocaleString('en-US');\n    } else {\n      cell.textContent = newInput.value;\n    };\n  });\n});\n"]}